type BookReference {
  id: ID!
  abbreviation: String! @search @id
  name: String! @search(by: [term, exact])
  localizedBookName: [LocalizedBookName] @hasInverse(field: bookReference)
  number: Int! @search 
  chapterReferences: [ChapterReference!] @hasInverse(field: bookReference)
}


type ChapterReference {
  id: ID!
  number: Int! @search
  bookReference: BookReference!
  verseReferences: [VerseReference!] @hasInverse(field: chapterReference)
}

type VerseReference {
  id: ID!
  number: Int! @search
  chapterReference: ChapterReference!
}

type BibleVersion {
  id: ID!
  name: String! @search(by: [term, exact])
  isoLanguage: ISOLanguage! @hasInverse(field: bibleVersions)
  isoScript: ISOScript! @hasInverse(field: bibleVersions)
  abbreviation: String! @search @id
  rights: String @search(by: [term, exact])
  localizedBooks: [LocalizedBookName] @hasInverse(field: bibleVersion)
  revisions: [BibleRevision] @hasInverse(field: bibleVersion)
  forwardTranslation: BibleVersion @hasInverse(field: backTranslation)
  backTranslation: BibleVersion @hasInverse(field: forwardTranslation)
  machineTranslation: Boolean
}

type LocalizedBookName {
  id: ID!
  name: String! @search(by: [term, exact])
  bookReference: BookReference! @hasInverse(field: localizedBookName)
  bibleVersion: BibleVersion! @hasInverse(field: localizedBooks)
}

type ISOLanguage {
  id: ID!
  iso639: String! @search(by: [exact]) @id
  name: String! @search(by: [term, exact])
  bibleVersions: [BibleVersion] @hasInverse(field: isoLanguage)
  words: [Word] @hasInverse(field: isoLanguage)
}

type ISOScript {
  id: ID!
  iso15924: String! @search(by: [exact]) @id
  name: String! @search(by: [term, exact])
  bibleVersions: [BibleVersion] @hasInverse(field: isoScript)
}

type BibleRevision {
  id: ID!
  date: DateTime! @search
  bibleVersion: BibleVersion!
  published: Boolean
  verseTexts: [VerseText!] @hasInverse(field: bibleRevision)
  assessments: [Assessment] @hasInverse(field: bibleRevision)
}

type VerseText {
  id: ID!
  text: String! @search(by: [term])
  verseReference: [VerseReference!]
  bibleRevision: BibleRevision!
  assessmentDetails: [AssessmentDetail]
  words: [Word] @hasInverse(field: verseTexts)
}

enum AssessmentType {
  SemanticSimilarity
  QAComprehensibility
  SubwordsPerSentence
}

type Assessment {
  id: ID!
  type: AssessmentType! @search(by: [exact])
  bibleRevision: BibleRevision!
  reference: BibleRevision
  date: DateTime! @search
  details: [AssessmentDetail!] @hasInverse(field: assessment)
}

type AssessmentDetail {
  id: ID!
  assessment: Assessment!
  assessmentMetrics: [AssessmentMetric!] @hasInverse(field: assessmentDetail)
  verseTexts: [VerseText]
}

type AssessmentMetric {
  id: ID!
  assessmentDetail: AssessmentDetail!
  flag: Boolean @search
  number: Float @search
}

type SemanticDomain {
  cids: ID!
  name: String! @search
  words: [Word!] @hasInverse(field: semanticDomains)
  parentSemanticDomain: SemanticDomain
  childSemanticDomains: [SemanticDomain] @hasInverse(field: parentSemanticDomain)
}

type Word {
  id: ID!
  text: String! @search
  semanticDomains: [SemanticDomain!]
  isoLanguage: ISOLanguage!
  verseTexts: [VerseText] @hasInverse(field: verseText)
}
